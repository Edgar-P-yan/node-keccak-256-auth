{"version":3,"file":"index.umd.js","sources":["../src/axios-get-full-uri.ts","../src/axios-interceptor.ts","../src/passport-strategy.ts"],"sourcesContent":["import type { AxiosRequestConfig } from 'axios';\nimport axios from 'axios';\n\n/**\n * Gets full uri combining baseUrl and url.\n *\n * Axios does not export such method, so we implement it ourselves.\n * @see https://github.com/axios/axios/pull/3737\n */\nexport function axiosGetFullUri(config: AxiosRequestConfig): string {\n  const requestedURL = axios.getUri(config);\n\n  return buildFullPath(config.baseURL, requestedURL);\n}\n\n/**\n * Internal combineURLs helper function from axios\n * @see https://github.com/axios/axios/blob/d99d5faac29899eba68ce671e6b3cbc9832e9ad8/lib/helpers/combineURLs.js\n *\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL: string, relativeURL: string): string {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Internal buildFullPath helper function from axios\n * @see https://github.com/axios/axios/blob/d99d5faac29899eba68ce671e6b3cbc9832e9ad8/lib/core/buildFullPath.js\n *\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL: string | void, requestedURL: string): string {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\n/**\n * Internal isAbsoluteURL helper function from axios\n * @see https://github.com/axios/axios/blob/d99d5faac29899eba68ce671e6b3cbc9832e9ad8/lib/helpers/isAbsoluteURL.js\n *\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url: string): boolean {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","import type { AxiosRequestConfig } from 'axios';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as sigUtil from '@metamask/eth-sig-util';\nimport url from 'url';\nimport { axiosGetFullUri } from './axios-get-full-uri';\nimport _debug from 'debug';\nconst debug = _debug('keccak-256-auth:axios-interceptor');\n\ntype AxiosInterceptor = (config: AxiosRequestConfig) => AxiosRequestConfig;\n\n/**\n * Adds Authorization header with the Keccak-256 schema to the requests.\n * @see https://coldstack.atlassian.net/wiki/spaces/CS/pages/322109441/HTTP\n */\nexport function keccak256AxiosInterceptor(params: {\n  privateKey: string;\n  signedHeaders?: string[];\n  debug?: boolean;\n}): AxiosInterceptor {\n  const privateKey = Buffer.from(params.privateKey.replace(/^0x/, ''), 'hex');\n  const publicKey = ethUtil.bufferToHex(ethUtil.privateToAddress(privateKey));\n  const defaultSignedHeaders = params.signedHeaders\n    ? params.signedHeaders.map((header) => header.toLowerCase())\n    : ['date', 'host'];\n\n  params.debug &&\n    debug(\n      `Initialized: publicKey=${publicKey}, signedHeaders=${defaultSignedHeaders.join(\n        ';',\n      )}`,\n    );\n\n  return function _keccak256AxiosInterceptor(\n    config: AxiosRequestConfig,\n  ): AxiosRequestConfig {\n    if (!config.method) {\n      throw new TypeError(`config.method is ${config.method}`);\n    }\n\n    const uri = url.parse(axiosGetFullUri(config));\n\n    /** path is the \"/pathname?query=val\" part of the url */\n    const path = uri.path;\n\n    /**\n     * The list of headers\n     * @example\n     * [\"content-length:1024\", \"content-type:text/plain\"]\n     */\n    const headers: string[] = [];\n\n    // In the \"config\" object there is no Host header\n    // But it will appear only when the request sent.\n    // We set it here explicitly to make sure that\n    // in the signature the Host header will be included.\n    if (!hasKeyCaseInsensitive(config.headers, 'host')) {\n      const host = uri.host as string;\n      if (config.headers) {\n        config.headers['host'] = host;\n      } else {\n        config.headers = {\n          host,\n        };\n      }\n    }\n\n    if (!hasKeyCaseInsensitive(config.headers, 'date')) {\n      const date = new Date().toUTCString();\n      if (config.headers) {\n        config.headers['date'] = date;\n      } else {\n        config.headers = {\n          date,\n        };\n      }\n    }\n\n    // Delete all headers from SignedHeaders which are not specified in the configs\n    const signedHeaders = defaultSignedHeaders\n      .filter((header) => hasKeyCaseInsensitive(config.headers, header))\n      .sort();\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    Object.entries(config.headers!)\n      .map(([key, val]): [string, string] => [key.toLowerCase(), String(val)])\n      .filter(([key]) => signedHeaders.includes(key))\n      .sort(([key1], [key2]) => (key1 > key2 ? 1 : -1))\n      .forEach(([key, val]) => {\n        headers.push(`${key}:${val}`);\n      });\n\n    const stringToSign =\n      `${config.method.toUpperCase()} ${path}\\n` + headers.join('\\n');\n\n    const signature = sigUtil.personalSign({\n      privateKey,\n      data: ethUtil.bufferToHex(Buffer.from(stringToSign, 'utf-8')),\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    config.headers!['authorization'] =\n      'Keccak-256 public_key=' +\n      publicKey +\n      ',signed_headers=' +\n      signedHeaders.join(';') +\n      ',signature=' +\n      signature;\n\n    if (params.debug) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      config.headers!['x-keccak-256-string-to-sign'] = stringToSign;\n    }\n\n    debug(`String to sign: ${stringToSign}`);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    debug(`Authorization header: ${config.headers!['authorization']}`);\n\n    return config;\n  };\n}\n\nfunction hasKeyCaseInsensitive(\n  record: Record<string, unknown> | undefined,\n  key: string,\n): boolean {\n  const lowerKey = key.toLowerCase();\n  return record\n    ? Object.keys(record).some((k) => k.toLowerCase() === lowerKey)\n    : false;\n}\n","import type express from 'express';\nimport { Strategy } from 'passport-strategy';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as sigUtil from '@metamask/eth-sig-util';\nimport type { Keccak256User } from './keccak-256-user.interface';\n\ninterface ParsedAuthorizationHeader {\n  publicKey: string;\n  signedHeaders: string[];\n  signature: string;\n}\n\nexport class Keccak256Strategy extends Strategy {\n  override authenticate(req: express.Request): void {\n    try {\n      const parsed = this.parseAuthorizationHeader(req);\n\n      const stringToSign = this.getStringToSign(req, parsed);\n\n      const msgBufferHex = ethUtil.bufferToHex(\n        Buffer.from(stringToSign, 'utf8'),\n      );\n\n      const address = sigUtil.recoverPersonalSignature({\n        data: msgBufferHex,\n        signature: parsed.signature,\n      });\n\n      if (parsed.publicKey.toLowerCase() !== address.toLowerCase()) {\n        throw new Error('Unauthorized: wrong signature');\n      }\n\n      const user: Keccak256User = {\n        publicKey: parsed.publicKey,\n      };\n\n      this.success(user);\n    } catch (err) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.error(err as any);\n    }\n  }\n\n  private getStringToSign(\n    req: express.Request,\n    parsed: ParsedAuthorizationHeader,\n  ): string {\n    let stringToSign = `${req.method.toUpperCase()} ${req.originalUrl}\\n`;\n\n    if (parsed.signedHeaders.length) {\n      const headersEntries = Object.entries(req.headers)\n        .filter(([key]) => parsed.signedHeaders.includes(key))\n        .sort(([key1], [key2]) => (key1 > key2 ? 1 : -1))\n        .map((header) => {\n          // When the request has multiple headers with the same name sort\n          // them by their value\n          if (Array.isArray(header[1])) {\n            header[1] = header[1].sort();\n          }\n\n          return header;\n        });\n\n      const headersArr: string[] = [];\n\n      headersEntries.forEach((header) => {\n        if (!Array.isArray(header[1])) {\n          headersArr.push(header[0] + ':' + header[1]);\n        } else {\n          header[1].forEach((value) => {\n            headersArr.push(header[0] + ':' + value);\n          });\n        }\n      });\n\n      stringToSign += headersArr.join('\\n');\n    }\n\n    return stringToSign;\n  }\n\n  private parseAuthorizationHeader(\n    req: express.Request,\n  ): ParsedAuthorizationHeader {\n    if (\n      !req.headers.authorization ||\n      typeof req.headers.authorization !== 'string'\n    ) {\n      throw new Error('Missing Authorization header');\n    }\n\n    const [schema, params] = req.headers.authorization.split(' ') as [\n      string,\n      string,\n    ];\n    if (schema !== 'Keccak-256') {\n      throw new Error('Unknown authentication schema. Expected Keccak-256');\n    }\n\n    const [publicKeyPair, headersPartPair, signPartPair] = params\n      .split(',')\n      .map((pair) => pair.split('='));\n\n    if (\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      publicKeyPair![0] !== 'public_key' ||\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headersPartPair![0] !== 'signed_headers' ||\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      signPartPair![0] !== 'signature'\n    ) {\n      throw new Error('Invalid Authentication header');\n    }\n\n    const result: ParsedAuthorizationHeader = {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      publicKey: publicKeyPair![1]!,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      signedHeaders: headersPartPair![1]!\n        .split(';')\n        .filter((header) => !!header),\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      signature: signPartPair![1]!,\n    };\n\n    if (!result.publicKey.match(/^0x[a-fA-F0-9]{40}$/)) {\n      throw new Error('Invalid Authentication header');\n    }\n\n    return result;\n  }\n}\n"],"names":["axios","_debug","ethUtil","url","sigUtil","Strategy"],"mappings":"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"}